version: 2.1

executors:
  default:
    parameters:
      tag:
        description: The circleci/ruby Docker image version tag
        type: string
        default: latest
    working_directory: ~/rubyhub
    docker:
      - image: circleci/ruby:<< parameters.tag >>-node

commands:
  cc-setup-coverage:
    description: Setup Code Climate
    parameters:
      url:
        description: Pre-built binary URL
        default: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
        type: string
      version:
        default: latest
        type: string
    steps:
      - restore_cache:
          key: cc-setup-<< parameters.version >>
      - run:
          name: Install Code Climate Test Reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - save_cache:
          key: cc-setup-<< parameters.version >>
          paths:
            - ./tmp/cc-test-reporter

  run_linters:
    steps:
      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: Fasterer
          command: bundle exec fasterer

  run_specs:
    steps:
      - run:
          name: run tests
          command: |
            mkdir -p /tmp/test-results
            bundle exec rspec --format documentation \
                              --format RspecJunitFormatter \
                              --out tmp/test-results/results.xml \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) --debug

      - run:
          name: Code Climate Test Coverage
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json" --debug

  cc-upload-coverage:
    description: Upload coverage payload to Code Climate
    steps:
      - run:
          name: Code Climate Upload Coverage
          command: |
            ./tmp/cc-test-reporter sum-coverage --output - coverage/codeclimate.*.json | ./tmp/cc-test-reporter upload-coverage --debug --input -

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  bundle-load-cache:
    description: Load cached RubyGems
    parameters:
      key:
        description: The cache key to use
        type: string
        default: bundle-v1
    steps:
      - restore_cache:
          key: 'bundle-v1-<< parameters.key >>-{{ arch }}-{{ checksum "rubyhub.gemspec" }}'

  bundle-install:
    description: Install gems with Bundler
    steps:
      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
            bundle install

  bundle-save-cache:
    description: Save RubyGems to cache
    parameters:
      key:
        description: The cache key to use
        type: string
        default: bundle-v1
    steps:
      - save_cache:
          key: 'bundle-v1-<< parameters.key >>-{{ arch }}-{{ checksum "rubyhub.gemspec" }}'
          paths:
            - vendor/bundle
jobs:
  checkout:
    executor: default
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  cc-setup-coverage:
    executor: default
    steps:
      - cc-setup-coverage
      - persist_to_workspace:
          root: ./tmp
          paths:
            - cc-test-reporter

  ruby-2-4:
    executor:
      name: default
      tag: "2.4"
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - bundle-load-cache:
          key: ruby-2.4
      - bundle-install
      - bundle-save-cache:
          key: ruby-2.4
      - run_linters
      - run_specs

  ruby-2-5:
    executor:
      name: default
      tag: "2.5"
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - bundle-load-cache:
          key: ruby-2.5
      - bundle-install
      - bundle-save-cache:
          key: ruby-2.5
      - run_linters
      - run_specs

  ruby-2-6:
    executor:
      name: default
      tag: "2.6"
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - bundle-load-cache:
          key: ruby-2.6
      - bundle-install
      - bundle-save-cache:
          key: ruby-2.6
      - run_linters
      - run_specs

  ruby-2-7:
    executor:
      name: default
      tag: "2.7"
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - bundle-load-cache:
          key: ruby-2.7
      - bundle-install
      - bundle-save-cache:
          key: ruby-2.7
      - run_linters
      - run_specs

  ruby-head:
    executor: default
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - bundle-load-cache:
          key: ruby-head
      - bundle-install
      - bundle-save-cache:
          key: ruby-head
      - run_linters
      - run_specs

  cc-upload-coverage:
    executor: default
    steps:
      - attach_workspace:
          at: ~/rubyhub
      - cc-upload-coverage

workflows:
  version: 2.1
  build:
    jobs:
      - checkout
      - cc-setup-coverage
      - ruby-2-4:
          requires:
            - checkout
            - cc-setup-coverage
      - ruby-2-5:
          requires:
            - checkout
            - cc-setup-coverage
      - ruby-2-6:
          requires:
            - checkout
            - cc-setup-coverage
      - ruby-2-7:
          requires:
            - checkout
            - cc-setup-coverage
      - ruby-head:
          requires:
            - checkout
            - cc-setup-coverage
      - cc-upload-coverage:
          requires:
            - ruby-2-4
            - ruby-2-5
            - ruby-2-6
            - ruby-2-7
